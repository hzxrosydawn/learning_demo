<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>

    <name>demo-webservice</name>
    <groupId>com.rosydawn.demo</groupId>
    <artifactId>demo-webservice</artifactId>
    <version>1.0-SNAPSHOT</version>

    <build>
        <plugins>
            <!--<plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                &lt;!&ndash; 对应的JDK、Servlet即JSP版本：JDK1.6+&Servlet3.0&JSP2.2。&ndash;&gt;
                <version>8.1.16.v20140903</version>
                <configuration>
                    &lt;!&ndash; 指定接收stop命令的端口。 &ndash;&gt;
                    <stopPort>9966</stopPort>
                    &lt;!&ndash; 指定发送到关闭端口的字符串来验证stop命令。 &ndash;&gt;
                    <stopKey>shutdown</stopKey>
                    &lt;!&ndash;设置内容改变后是否自动重新加载和部署。默认为automatic&ndash;&gt;
                    <reload>manual</reload>
                    &lt;!&ndash; 检查变更和自动热部署的时间间隔。 &ndash;&gt;
                    <scanIntervalSeconds>5</scanIntervalSeconds>
                    &lt;!&ndash;忽略代码校验，以免 Jetty 启动很慢。&ndash;&gt;
                    <contextXml>${project.basedir}/src/main/webapp/WEB-INF/jetty-context.xml</contextXml>
                    &lt;!&ndash;<dumpOnStart>true</dumpOnStart>&ndash;&gt;
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            &lt;!&ndash; 可通过命令行指令“mvn -Djetty.port=9999 jetty:run” 来更改默认端口。 &ndash;&gt;
                            <port>8080</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors> &lt;!&ndash;jetty 8 config&ndash;&gt;
                    <webApp>
                        &lt;!&ndash; 设置项目的ContextPath，默认为“/${project.artifactId}”。 &ndash;&gt;
                        <contextPath>/${project.artifactId}</contextPath>
                        &lt;!&ndash; Jetty提供静态资源的多个目录，用来替换baseResource元素。 &ndash;&gt;
                        <resourceBases>
                            <resourceBase>${project.basedir}/src/main/webapp</resourceBase>
                            &lt;!&ndash;<resourceBase>${project.basedir}/commons</resourceBase>&ndash;&gt;
                        </resourceBases>
                        &lt;!&ndash; 指定一个jetty-env.xml文件的路径，在该文件中可使用JNDI。
                         确定该文件打包进classpath中，如果把该文件放在测试目录就不行。&ndash;&gt;
                        &lt;!&ndash;<jettyEnvXml>${project.basedir}/src/main/webapp/WEB-INF/jetty-env.xml</jettyEnvXml>&ndash;&gt;
                    </webApp>
                    <requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
                        <filename>target/access-yyyy_mm_dd.log</filename>
                        <filenameDateFormat>yyyy_MM_dd</filenameDateFormat>
                        <logDateFormat>yyyy-MM-dd HH:mm:ss</logDateFormat>
                        <logTimeZone>GMT+8:00</logTimeZone>
                        <append>true</append>
                        <logServer>true</logServer>
                        <retainDays>120</retainDays>
                        <logCookies>true</logCookies>
                    </requestLog>
                </configuration>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <!-- put your compilation configurations here -->
                    <!--强制指定编译所用的JDK版本（默认为1.5），可以避免必须每次手动将IDE中的编译JDK版本调整到已有较高JDK版本-->
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>3.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>3.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
            <version>3.2.6</version>
        </dependency>
    </dependencies>
</project>
